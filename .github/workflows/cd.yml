name: CD - Build and Push Images

on:
    push:
        branches: [main]
        paths:
            - "client/**"
            - "server/**"
            - "docker-compose.yml"
            - "docker-compose.dev.yml"

permissions:
    contents: read
    packages: write

env:
    REGISTRY: ghcr.io
    IMAGE_CLIENT: ghcr.io/${{ github.repository }}/client
    IMAGE_SERVER: ghcr.io/${{ github.repository }}/server

jobs:
    build-and-push:
        name: Build and Push (client/server)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract metadata (client)
              id: meta_client
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_CLIENT }}
                  tags: |
                      type=sha,format=long
                      type=raw,value=latest

            - name: Extract metadata (server)
              id: meta_server
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_SERVER }}
                  tags: |
                      type=sha,format=long
                      type=raw,value=latest

            - name: Build and push client
              uses: docker/build-push-action@v6
              with:
                  context: ./client
                  file: ./client/Dockerfile
                  push: true
                  tags: ${{ steps.meta_client.outputs.tags }}
                  labels: ${{ steps.meta_client.outputs.labels }}

            - name: Build and push server
              uses: docker/build-push-action@v6
              with:
                  context: ./server
                  file: ./server/Dockerfile
                  push: true
                  tags: ${{ steps.meta_server.outputs.tags }}
                  labels: ${{ steps.meta_server.outputs.labels }}
